project_name: my_project
description: A sample project description

# Add dependencies section to manage project requirements
dependencies:
  pip_requirements: true  # Will use requirements.txt
  dev_requirements: true  # Will create requirements-dev.txt for development dependencies
  
conda:
  create_conda_env: true
  python_version: 3.12
  # Add conda-specific configurations
  channels:
    - conda-forge
    - defaults
  env_name: "${project_name}"  # Use project name as environment name
  
github:
  create_repo: true
  repo_name: _CODER
  repo_description: A collection of tools for developing on my Macbook Studio and Macbook Pro
  repo_visibility: private
  repo_topics: []
  repo_default_branch: main
  repo_branches:
    - develop:
  repo_commit_message: "Initial project setup - created by coder"
  repo_user: yogipatel5
  # Add workflow configurations
  workflows:
    create_ci: true  # Creates basic GitHub Actions workflow
    create_pr_template: true  # Adds pull request template
  
path: ~/Code/Projects

templates:
  copy_all: true
  files:
    - .cursorrules
    - .env
    - .vscode/settings.json
  # Add additional important template files
  additional_files:
    - pyproject.toml  # For modern Python packaging
    - .pre-commit-config.yaml  # For pre-commit hooks
    - CHANGELOG.md  # For tracking changes
    - .editorconfig  # For consistent coding styles

structure:
  directories:
    - tests
    - docs
    # Add more standard directories
    - src/${project_name}  # Source code directory
    - scripts  # Utility scripts
    - config  # Configuration files
  files:
    - README.md
    - requirements.txt
    - .gitignore
    # Add more standard files
    - setup.py  # For package installation
    - Makefile  # For common commands
    - docs/conf.py  # For documentation
    - tests/__init__.py
    - tests/conftest.py  # For pytest configuration

git:
  create_repo: true
  initial_branch: main
  other_branches: [develop,staging]
  commit_message: "Initial project setup - created by coder"
  # Add git hooks configuration
  hooks:
    - pre-commit
    - pre-push
  ignore_patterns:
    - "*.pyc"
    - "__pycache__"
    - ".env"
    - ".venv"
    - "*.egg-info"

# Add VSCode specific settings
vscode:
  create_settings: true
  extensions:
    - ms-python.python
    - ms-python.vscode-pylance
    - ms-python.black-formatter
    - charliermarsh.ruff
    - tamasfe.even-better-toml

# Add testing configuration
testing:
  framework: pytest
  coverage: true
  create_basic_tests: true

# Add documentation configuration
documentation:
  framework: mkdocs  # or sphinx
  create_basic_docs: true

# Add linting and formatting configuration
code_quality:
  linters:
    - ruff
    - mypy
  formatters:
    - black
  line_length: 88  # Black default
  
env:
  create_env: true
  variables:
    - name: VAULT_ADDR
      value: env.VAULT_ADDR
    - name: VAULT_TOKEN
      value: env.VAULT_TOKEN
    # Add common development variables
    - name: PYTHONPATH
      value: "${HOME}/Code/Projects/${project_name}/src"
    - name: PYTHON_ENV
      value: development

