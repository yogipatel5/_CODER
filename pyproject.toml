[project]
name = "CODER"
version = "0.1.0"
description = "AI-powered Notion agent using Pydantic"
requires-python = ">=3.11"
dependencies = [
  "notion-client>=2.0.0",
  "pydantic>=2.0.0",
  "pydantic-ai>=0.0.16",
  "click>=8.0.0",
  "python-dotenv>=1.0.0",
  "pytest>=8.0.0",
  "pytest-asyncio>=0.21.0",
]

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
DJANGO_SETTINGS_MODULE = "core.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "-v --reuse-db --strict-markers"
norecursedirs = [
  ".*",
  "build",
  "dist",
  "CVS",
  "_darcs",
  "{arch}",
  "*.egg",
  "venv",
  "env",
  "virtualenv",
  ".git",
  ".tox",
  ".pytest_cache",
  "__pycache__",
]
markers = [
  "unit: marks unit tests that don't require external services",
  "integration: marks tests that require external services (deselect with '-m \"not integration\"')",
  "git: marks tests that interact with git",
  "github: marks tests that interact with GitHub API",
  "yaml: marks tests for YAML configuration",
  "tools: marks tests for code tools",
]

[tool.isort]
profile = "black"
line_length = 120
known_first_party = ["CODER"]

[tool.black]
line-length = 120
target-version = ["py310"]

[tool.ruff.lint]
fixable = ["E", "F", "I001"]
ignore = ["E501"]
select = ["E", "F", "I"]
unfixable = ["F401"]


[tool.ruff]
line-length = 120
select = [
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "W",   # pycodestyle warnings
  "UP",  # pyupgrade
  "I",   # isort
  "C4",  # flake8-comprehensions
  "B",   # flake8-bugbear
  "A",   # flake8-builtins
  "PL",  # pylint
  "RUF", # ruff-specific rules
]
fixable = ["ALL"]
unfixable = []
ignore = []

[tool.ruff.isort]
known-first-party = ["CODER"]
[tool.ruff.format]
quote-style = "double"
line-ending = "auto"
