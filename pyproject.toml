[project]
name = "notion-ai-agent"
version = "0.1.0"
description = "AI-powered Notion agent using Pydantic"
requires-python = ">=3.12"
dependencies = [
    "notion-client>=2.0.0",
    "pydantic>=2.0.0",
    "pydantic-ai>=0.0.16",
    "click>=8.0.0",
    "python-dotenv>=1.0.0",
    "pytest>=8.0.0",
    "ruff>=0.2.0",
    "black>=24.1.0",
    "pytest-asyncio>=0.21.0",
]

[tool.pytest.ini_options]
testpaths = ["notion/tests"]
python_files = ["test_*.py"]
addopts = [
    "--verbose",
    "--cov=notion",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90",
    "--cov-branch",
    "-m 'not integration'",
]
markers = [
    "integration: marks tests that require actual API calls",
    "asyncio: marks async tests",
]

[tool.coverage.run]
source = ["notion"]
branch = true
concurrency = ["thread", "multiprocessing"]
omit = [
    "notion/tests/*",
    "notion/__pycache__/*",
    "notion/management/commands/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "def main",
]
precision = 2

[tool.coverage.html]
directory = "coverage_html"
show_contexts = true

[tool.coverage.paths]
source = ["notion/", "*/site-packages/notion/"]

[tool.black]
line-length = 120
target-version = ['py39']

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = []

[tool.ruff]
line-length = 120
target-version = "py39"
