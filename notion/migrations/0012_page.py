# Generated by Django 5.1.5 on 2025-01-27 22:49

import pgvector.django
import pgvector.django.vector
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("notion", "0011_delete_page"),
    ]

    operations = [
        migrations.RunSQL(
            # Create the vector extension if it doesn't exist
            "CREATE EXTENSION IF NOT EXISTS vector;",
            "DROP EXTENSION IF EXISTS vector;",
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                ("id", models.CharField(max_length=36, primary_key=True, serialize=False)),
                ("created_time", models.DateTimeField()),
                ("last_edited_time", models.DateTimeField()),
                ("last_synced_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("url", models.URLField()),
                ("public_url", models.URLField(blank=True, null=True)),
                ("archived", models.BooleanField(default=False)),
                ("content", models.TextField(blank=True, help_text="Cleaned text content for embeddings", null=True)),
                (
                    "embedding",
                    pgvector.django.VectorField(
                        blank=True, dimensions=384, help_text="Vector embedding of the content", null=True
                    ),
                ),
                ("search_metadata", models.JSONField(default=dict, help_text="Metadata for search optimization")),
                ("cover", models.JSONField(blank=True, null=True)),
                ("icon", models.JSONField(blank=True, null=True)),
                ("parent_type", models.CharField(default="workspace", max_length=50)),
                ("parent_id", models.CharField(blank=True, max_length=255, null=True)),
                ("raw_properties", models.JSONField(default=dict)),
                ("blocks", models.JSONField(default=list, help_text="Page content blocks from Notion")),
                ("in_trash", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Notion Page",
                "verbose_name_plural": "Notion Pages",
                "db_table": "notion_page",
                "indexes": [models.Index(fields=["title"], name="notion_page_title_d1439d_idx")],
            },
        ),
        migrations.AddIndex(
            model_name="page",
            index=models.Index(fields=["title"], name="notion_page_title_idx"),
        ),
        migrations.RunSQL(
            # Create an index on the vector column
            "CREATE INDEX notion_page_embedding_idx ON notion_page USING ivfflat (embedding vector_cosine_ops);",
            "DROP INDEX IF EXISTS notion_page_embedding_idx;",
        ),
    ]
